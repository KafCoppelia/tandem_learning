# cores = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491]
# cores = [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 207, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 303, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 335, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492]
# cores = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491]
# cores = [0, 32, 64, 96, 128, 160, 192, 224, 256]
cores = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491]


COREX = 16
COREY = 16
COREYBIT = 5

CHIPID = 0 
FRAMEHEAD = (1 << 2) + 2

SRAMBEG1 = 0
FRAMENUM1 = 512 * 4 - 4

SRAMBEG2 = 1
FRAMENUM2 = 4

FRAMEFORMAT1 = (FRAMEHEAD << 60) + (CHIPID << 50) + (SRAMBEG1 << 20) + (1 << 19) + FRAMENUM1
FRAMEFORMAT2 = (FRAMEHEAD << 60) + (CHIPID << 50) + (SRAMBEG2 << 20) + (1 << 19) + FRAMENUM2

def genTestFrame4():
    frames = list()
    for coreId in cores:
        frame1 = "{:064b}".format(FRAMEFORMAT1 + (coreId << 40))
        frame2 = "{:064b}".format(FRAMEFORMAT2 + (coreId << 40))
        frames.append(frame1)
        frames.append(frame2)
        
    with open("example0_debug.txt",'w') as f:
        f.write("\n".join(frames))
    return 

if __name__ == "__main__":
    genTestFrame4()